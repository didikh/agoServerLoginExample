Fri Jul 04 2014 15:11:09 GMT-0400 (Eastern Daylight Time)
xXvR7kS5aFK1iF4obfqMigUCqXoYcaDRty_IdG_GrU5lI5CRTOnHIjOzoH1cMlDMWY7F6OPDhVeTM0l1_QGrrSaYOFqey5RkeO9_DTjB08j7an9udxK124TdOLOzzmGGW5YA-FiLVxeK_8nX0dffqA..
-------------------
/source.html
[ 'server.js', 'requestUtils.js', 'AGOconnection.js' ]
{ cssFile: '//yandex.st/highlightjs/8.0/styles/default.min.css',
  code: '<span class="hljs-comment">/*jslint nomen: true, node: true, devel: true */</span>\r<span class="hljs-pi">\n"use strict"</span>;\r\n\r\n<span class="hljs-keyword">var</span> https = <span class="hljs-built_in">require</span>(<span class="hljs-string">\'https\'</span>),\r\n    url = <span class="hljs-built_in">require</span>(<span class="hljs-string">\'url\'</span>),\r\n    qs = <span class="hljs-built_in">require</span>(<span class="hljs-string">\'querystring\'</span>),\r\n    <span class="hljs-built_in">JSON</span> = <span class="hljs-built_in">require</span>(<span class="hljs-string">\'JSON\'</span>);\r\n\r\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">appLogin</span><span class="hljs-params">(_appid, _appsecret)</span> {</span>\r\n    <span class="hljs-keyword">var</span> _self = <span class="hljs-keyword">this</span>;\r\n    <span class="hljs-keyword">this</span>.APPID = _appid;\r\n    <span class="hljs-keyword">this</span>.APPSECRET = _appsecret;\r\n    <span class="hljs-keyword">this</span>.token = <span class="hljs-literal">null</span>;\r\n    <span class="hljs-keyword">this</span>._refresh = <span class="hljs-literal">null</span>;\r\n    <span class="hljs-keyword">this</span>._getToken = <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">()</span> {</span>\r\n        <span class="hljs-comment">// request parameters</span>\r\n        <span class="hljs-keyword">var</span> post_data = qs.stringify({\r\n                <span class="hljs-string">\'client_id\'</span>: _self.APPID,\r\n                <span class="hljs-string">\'client_secret\'</span>: _self.APPSECRET,\r\n                <span class="hljs-string">\'grant_type\'</span>: <span class="hljs-string">\'client_credentials\'</span>\r\n            }),\r\n            <span class="hljs-comment">// request setup</span>\r\n            post_options = {\r\n                host: <span class="hljs-string">\'www.arcgis.com\'</span>,\r\n                port: <span class="hljs-string">\'443\'</span>,\r\n                path: <span class="hljs-string">\'/sharing/oauth2/token\'</span>,\r\n                method: <span class="hljs-string">\'POST\'</span>,\r\n                headers: {\r\n                    <span class="hljs-string">\'Content-Type\'</span>: <span class="hljs-string">\'application/x-www-form-urlencoded\'</span>,\r\n                    <span class="hljs-string">\'Content-Length\'</span>: post_data.length\r\n                }\r\n            },\r\n            <span class="hljs-comment">//Make the request</span>\r\n            post_req = https.request(post_options, <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">(postres)</span> {</span>\r\n                postres.setEncoding(<span class="hljs-string">\'utf8\'</span>);\r\n                postres.on(<span class="hljs-string">\'data\'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">(chunk)</span> {</span>\r\n                    <span class="hljs-keyword">var</span> tokenObj = <span class="hljs-built_in">JSON</span>.parse(chunk);\r\n                    _self.token = tokenObj.access_token;\r\n                    console.log(<span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>());\r\n                    console.log(tokenObj.access_token);\r\n                    console.log(<span class="hljs-string">\'-------------------\'</span>);\r\n                    <span class="hljs-comment">//We\'ll set the refresh 30 seconds before AGO expiration</span>\r\n                    _self._refresh = setTimeout(_self._getToken, (tokenObj.expires_in - <span class="hljs-number">30</span>) * <span class="hljs-number">1000</span>);\r\n                });\r\n            });\r\n        <span class="hljs-comment">// post the data</span>\r\n        post_req.write(post_data);\r\n        post_req.end();\r\n    };\r\n    <span class="hljs-comment">// createDataObject - auto add token &amp; json parameters</span>\r\n    <span class="hljs-keyword">this</span>.createDataObject = <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">(obj)</span> {</span>\r\n    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> (obj) === <span class="hljs-string">\'undefined\'</span>) {\r\n        obj = {};\r\n    }\r\n    obj.f = <span class="hljs-string">\'json\'</span>;\r\n    obj.token = _self.token;\r\n    <span class="hljs-keyword">return</span> obj;\r\n};\r\n\r\n    <span class="hljs-comment">//init code here</span>\r\n    <span class="hljs-keyword">this</span>._getToken();\r\n}\r\n\r\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">userLogin</span><span class="hljs-params">(_appid, _appsecret)</span> {</span>\r\n    <span class="hljs-keyword">var</span> _self = <span class="hljs-keyword">this</span>;\r\n\r\n    <span class="hljs-keyword">this</span>.APPID = _appid;\r\n    <span class="hljs-keyword">this</span>.APPSECRET = _appsecret;\r\n    <span class="hljs-comment">//    this.logins = {}</span>\r\n    <span class="hljs-comment">//\tthis.token = null;</span>\r\n    <span class="hljs-comment">//    this._refreshToken = null;</span>\r\n    <span class="hljs-comment">//\tthis._refresh = function(refreshToken){};</span>\r\n    <span class="hljs-keyword">this</span>.getToken = <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">(inUrl, redirectURI, callback, res)</span> {</span>\r\n        <span class="hljs-keyword">var</span> thisUrl = url.parse(inUrl, <span class="hljs-literal">true</span>);\r\n        <span class="hljs-comment">//check for the code query parameter</span>\r\n        <span class="hljs-keyword">if</span> (thisUrl.query.hasOwnProperty(<span class="hljs-string">\'code\'</span>)) {\r\n            <span class="hljs-comment">//Make a request to https://www.arcgis.com/sharing/oauth2/token</span>\r\n            <span class="hljs-keyword">var</span> post_data, post_options, post_req;\r\n            post_data = qs.stringify({\r\n                client_id: _self.APPID,\r\n                client_secret: _self.APPSECRET,\r\n                grant_type: <span class="hljs-string">\'authorization_code\'</span>,\r\n                code: thisUrl.query.code,\r\n                redirect_uri: redirectURI\r\n            });\r\n            <span class="hljs-comment">// request setup</span>\r\n            post_options = {\r\n                host: <span class="hljs-string">\'www.arcgis.com\'</span>,\r\n                port: <span class="hljs-string">\'443\'</span>,\r\n                path: <span class="hljs-string">\'/sharing/oauth2/token\'</span>,\r\n                method: <span class="hljs-string">\'POST\'</span>,\r\n                headers: {\r\n                    <span class="hljs-string">\'Content-Type\'</span>: <span class="hljs-string">\'application/x-www-form-urlencoded\'</span>,\r\n                    <span class="hljs-string">\'Content-Length\'</span>: post_data.length\r\n                },\r\n            };\r\n            <span class="hljs-comment">//Make the request</span>\r\n            post_req = https.request(post_options, <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">(postres)</span> {</span>\r\n                postres.setEncoding(<span class="hljs-string">\'utf8\'</span>);\r\n                postres.on(<span class="hljs-string">\'data\'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">(chunk)</span> {</span>\r\n                    <span class="hljs-comment">//Get the token and refresh token</span>\r\n                    <span class="hljs-comment">//exchange the refresh token for a long life token</span>\r\n                    <span class="hljs-comment">//go to /sharing/rest/accounts/self to get username</span>\r\n                    <span class="hljs-comment">//commit those as keys</span>\r\n                    <span class="hljs-keyword">var</span> tokenObj = <span class="hljs-built_in">JSON</span>.parse(chunk);\r\n                    callback(tokenObj, res);\r\n                });\r\n            });\r\n            <span class="hljs-comment">// post the data</span>\r\n            post_req.write(post_data);\r\n            post_req.end();\r\n        } <span class="hljs-keyword">else</span> {\r\n            callback(<span class="hljs-literal">null</span>, res);\r\n        }\r\n    };\r\n    <span class="hljs-keyword">this</span>.refreshToken = <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">(refreshToken, callback, res)</span> {</span>\r\n        <span class="hljs-keyword">var</span> post_data, post_options, post_req;\r\n        post_data = qs.stringify({\r\n            client_id: _self.APPID,\r\n            grant_type: <span class="hljs-string">\'refresh_token\'</span>,\r\n            refresh_token: refreshToken\r\n        });\r\n        <span class="hljs-comment">// request setup</span>\r\n        post_options = {\r\n            host: <span class="hljs-string">\'www.arcgis.com\'</span>,\r\n            port: <span class="hljs-string">\'443\'</span>,\r\n            path: <span class="hljs-string">\'/sharing/oauth2/token\'</span>,\r\n            method: <span class="hljs-string">\'POST\'</span>,\r\n            headers: {\r\n                <span class="hljs-string">\'Content-Type\'</span>: <span class="hljs-string">\'application/x-www-form-urlencoded\'</span>,\r\n                <span class="hljs-string">\'Content-Length\'</span>: post_data.length\r\n            },\r\n        };\r\n        <span class="hljs-comment">//Make the request</span>\r\n        post_req = https.request(post_options, <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">(postres)</span> {</span>\r\n            postres.setEncoding(<span class="hljs-string">\'utf8\'</span>);\r\n            postres.on(<span class="hljs-string">\'data\'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">(chunk)</span> {</span>\r\n                <span class="hljs-comment">//Get the token and refresh token</span>\r\n                <span class="hljs-comment">//exchange the refresh token for a long life token</span>\r\n                <span class="hljs-comment">//go to /sharing/rest/accounts/self to get username</span>\r\n                <span class="hljs-comment">//commit those as keys</span>\r\n                <span class="hljs-keyword">var</span> tokenObj = <span class="hljs-built_in">JSON</span>.parse(chunk);\r\n                callback(tokenObj, res);\r\n            });\r\n        });\r\n        <span class="hljs-comment">// post the data</span>\r\n        post_req.write(post_data);\r\n        post_req.end();\r\n\r\n    };\r\n\r\n}\r\n\r\nexports.arcgisURLs = {\r\n    <span class="hljs-string">\'portalURL\'</span>: <span class="hljs-string">\'http://www.arcgis.com/sharing/rest/\'</span>,\r\n    <span class="hljs-string">\'analysisURL\'</span>: <span class="hljs-string">\'http://analysis.arcgis.com/arcgis/rest/services/tasks/GPServer/\'</span>,\r\n    <span class="hljs-string">\'geosearch\'</span>: <span class="hljs-string">\'http://geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer/find\'</span>,\r\n    <span class="hljs-string">\'geocode\'</span>: <span class="hljs-string">\'http://geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer/geocodeAddresses\'</span>,\r\n    <span class="hljs-string">\'route\'</span>: <span class="hljs-string">\'http://route.arcgis.com/arcgis/rest/services/World/Route/NAServer/Route_World/solve\'</span>,\r\n    <span class="hljs-string">\'search\'</span>: <span class="hljs-string">\'http://www.arcgis.com/sharing/rest/search\'</span>,\r\n    <span class="hljs-string">\'serviceArea\'</span>: <span class="hljs-string">\'http://logistics.arcgis.com/arcgis/rest/services/World/ServiceAreas/GPServer/GenerateServiceAreas\'</span>,\r\n    <span class="hljs-string">\'users\'</span>: <span class="hljs-string">\'http://www.arcgis.com/sharing/rest/content/users/\'</span>\r\n};\r\n\r\nexports.appLogin = <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">(appid, appsecret)</span> {</span>\r\n    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> appLogin(appid, appsecret);\r\n};\r\n\r\nexports.userLogin = <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">(appid, appsecret)</span> {</span>\r\n    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> userLogin(appid, appsecret);\r\n};',
  filelist: [ 'server.js', 'requestUtils.js', 'AGOconnection.js' ],
  selected: 'AGOconnection.js' }
